$(window).load(function(){
  // Crop definition selector
  $('#crop_crop_definition_id').change(function(){
    var url = "<%= url_for([:edit, @image, @crop]) %>"
    var data = $("#edit_crop_<%= @crop.id %>").serialize()
    window.location = url + '?' + data
  });

  // Jcrop instance
  var api = $.Jcrop('#crop-target', {
    bgColor: 'white',
    bgOpacity: '.5',
    minSize: [
      <%= @crop.crop_definition.minimum_width * ((params[:scale] ? params[:scale] : default_image_scale).to_f / 100) %>,
      <%= @crop.crop_definition.minimum_height * ((params[:scale] ? params[:scale] : default_image_scale).to_f / 100) %>
    ],
    trueSize: [<%= @image.width %>, <%= @image.height %>],
    aspectRatio: <%= @crop.crop_definition.locked_ratio ? @crop.crop_definition.minimum_width.to_f / @crop.crop_definition.minimum_height.to_f : 0 %>,
    allowSelect: <%= @crop.crop_definition.selection_enabled %>,
    allowMove: <%= @crop.crop_definition.selection_moveable %>,
    allowResize: <%= @crop.crop_definition.selection_resizable %>,
    keySupport: false,
    addGrid: true,
    gridColor: 'black',
    gridOpacity: .4,
    gridStyle: 'rule-of-thirds',
    onChange: function(c) {
      $('#crop_x1').val(c.x);
      $('#crop_x2').val(c.x2);
      $('#crop_y1').val(c.y);
      $('#crop_y2').val(c.y2);
      $('#crop_width').val(c.w);
      $('#crop_height').val(c.h);
    },
  });
  // Set select based on params if there are any, if not, based on crop attributes
  api.setSelect([
    <%- if params[:crop] -%>
      <%= params[:crop][:x1].to_i || @crop.x1 %>,
      <%= params[:crop][:y1].to_i || @crop.y1 %>,
      <%= params[:crop][:x2].to_i || @crop.x2 %>,
      <%= params[:crop][:y2].to_i || @crop.y2 %>
    <%- else -%>
      <%= @crop.x1 %>,
      <%= @crop.y1 %>,
      <%= @crop.x2 %>,
      <%= @crop.y2 %>
    <%- end -%>
  ]);
  $('#grid_style').change(function(e){
    api.setOptions({ gridStyle: this.checked ? 'crosshair' : 'rule-of-thirds' });
  });
  $('#grid_color').change(function(e){
    api.setOptions({ gridColor: $(this).val() });
  });
  api.enable();

  // Grid options
  $('#grid-options').hide();
  $('#grid-options').dialog({
    title: 'Grid style',
    bgiframe: true,
    autoOpen: false,
    height: 'auto',
    width: 'auto',
    modal: false,
    resizable: false
  });
  $('#show-grid-options').click(function(){
    $('#grid-options').dialog('open');
    return false;
  });

  // Grid opacity Slider
  $("#grid-opacity-slider").slider({
    min: 0,
    max: 100,
    value: .4 * 100,
    slide: function(event, slider) {
      $('#grid-opacity-number').text(slider.value);
      api.setOptions({ gridOpacity: (slider.value / 100 )});
    }
  });

  // Scale Slider
  $("#scale-slider").slider({
    min: 5,
    max: 100,
    step: 5,
    value: <%= params[:scale] ? params[:scale].to_f : default_image_scale %>,
    slide: function(event, slider) {
      $('#scale-number').text(slider.value);
    },
    change: function(event, slider) {
      $('#scale').val(slider.value);
      var url = "<%= url_for([:edit, @image, @crop]) %>"
      var data = $("#edit_crop_<%= @crop.id %>").serialize()
      window.location = url + '?' + data
    }
  });
});