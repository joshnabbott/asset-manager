$(window).load(function(){
  // Automatically set scale of image based on image and browser width unless params[:scale] has been specified
  // function setScale() {
  //   <%- if params[:scale] -%>
  //     var scale = <%= params[:scale].to_f / 100 %>
  //   <%- else -%>
  //     image_width           = <%= @image.width %>;
  //     adjusted_window_width = $(window).width() - 50;
  // 
  //     if(image_width > adjusted_window_width){
  //       var scale = Math.round((adjusted_window_width / image_width) * 100) / 100;
  //     } else {
  //       var scale = 1;
  //     }
  //     alert(scale);
  //   <%- end -%>
  //   return scale;
  // }

  // Crop definition selector
  $('#crop_crop_definition_id').change(function(){
    var url = "<%= url_for([:new, @image, :crop]) %>"
    var data = $('#new_crop').serialize()
    window.location = url + '?' + data
  });

  var api = $.Jcrop('#crop-target', { 
    bgColor: 'white',
    bgOpacity: '.5',
    // boxWidth: <%= (@image.width * (params[:scale] ? params[:scale] : Crop::DEFAULT_IMAGE_SCALE).to_f / 100) %>,
    minSize: [
      <%= @crop.crop_definition.minimum_width * ((params[:scale] ? params[:scale] : Crop::DEFAULT_IMAGE_SCALE).to_f / 100) %>,
      <%= @crop.crop_definition.minimum_height * ((params[:scale] ? params[:scale] : Crop::DEFAULT_IMAGE_SCALE).to_f / 100) %>
    ],
    trueSize: [<%= @image.width %>, <%= @image.height %>],
    aspectRatio: <%= @crop.crop_definition.locked_ratio ? @crop.crop_definition.minimum_width.to_f / @crop.crop_definition.minimum_height.to_f : 0 %>,
    allowSelect: <%= @crop.crop_definition.selection_enabled %>,
    allowMove: <%= @crop.crop_definition.selection_moveable %>,
    allowResize: <%= @crop.crop_definition.selection_resizable %>,
    keySupport: false,
    addGrid: true,
    gridColor: 'black',
    gridOpacity: .4,
    onChange: function(c) {
      $('#crop_x1').val(c.x);
      $('#crop_x2').val(c.x2);
      $('#crop_y1').val(c.y);
      $('#crop_y2').val(c.y2);
      $('#crop_width').val(c.w);
      $('#crop_height').val(c.h);
    },
  });
  api.setSelect([
    <%- if params[:crop] -%>
      <%= params[:crop][:x1].to_i || @crop.crop_definition.x %>,
      <%= params[:crop][:y1].to_i || @crop.crop_definition.y %>,
      <%= params[:crop][:x2].to_i || (@crop.crop_definition.x + @crop.crop_definition.minimum_width) %>,
      <%= params[:crop][:y2].to_i || (@crop.crop_definition.y + @crop.crop_definition.minimum_height) %>
    <%- else -%>
      <%= @crop.crop_definition.x %>,
      <%= @crop.crop_definition.y %>,
      <%= @crop.crop_definition.x + @crop.crop_definition.minimum_width %>,
      <%= @crop.crop_definition.y + @crop.crop_definition.minimum_height %>
    <%- end -%>
  ]);
  api.setOptions({
    allowSelect: <%= @crop.crop_definition.selection_enabled %>,
    allowMove: <%= @crop.crop_definition.selection_moveable %>,
    allowResize: <%= @crop.crop_definition.selection_resizable %>
  });
  api.enable();

  // Slider
  $("#slider").slider({
    min: 5,
    max: 200,
    step: 5,
    value: <%= params[:scale] ? params[:scale].to_f : Crop::DEFAULT_IMAGE_SCALE %>,
    slide: function(event, slider) {
      $('#scale-number').text(slider.value + '%');
    },
    change: function(event, slider) {
      $('#scale').val(slider.value);
      var url = "<%= url_for([:new, @image, :crop]) %>"
      var data = $('#new_crop').serialize()
      window.location = url + '?' + data
    }
  });
});